<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

    <!--配置Ioc-->
    <bean id="accountService" class="com.hao.service.impl.AccountServiceImpl"></bean>

    <!--1、配置logger类-->
    <bean id="logger" class="com.hao.utils.Logger"></bean>

    <!--2、配置aop-->
    <aop:config>
        <!--配置切入点表达式，id：唯一标识，expression:表达式
                写在aop:aspect内部，只能在当前切面使用，可以写在通知后面
                写在外部，可以被所有切面使用，必须写在切面之前
            -->
        <aop:pointcut id="servcicePointCut" expression="execution(* com.hao.service.impl.*.*(..))"></aop:pointcut>
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置通知类型，并建立通知方法和切入点方法的关联-->

            <!--前置通知，切入点方法执行之前执行-->
            <!--<aop:before method="beforePrintLog" pointcut-ref="servcicePointCut"></aop:before>-->
            <!--后置通知，切入点方法正常执行完毕后执行-->
            <!--<aop:after-returning method="afterReturningPrintLog" pointcut-ref="servcicePointCut"></aop:after-returning>-->
            <!--异常通知，切入点方法出现异常后执行-->
            <!--<aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="servcicePointCut"></aop:after-throwing>-->
            <!--最终通知，无论切入点方法有没有正常执行，都会执行-->
            <!--<aop:after method="afterPrintLog" pointcut-ref="servcicePointCut"></aop:after>-->

            <!--环绕通知-->
            <aop:around method="aroundPrintLog" pointcut-ref="servcicePointCut"></aop:around>
            <!--写在内部-->
            <!--<aop:pointcut id="servcicePointCut" expression="execution(* com.hao.service.impl.*.*(..))"></aop:pointcut>-->

        </aop:aspect>
    </aop:config>
</beans>
